{"version":3,"file":"js/about.09ff93e9.js","mappings":"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","sources":["webpack://tsf/./src/views/ModelingView.vue","webpack://tsf/./src/views/ModelingView.vue?c00f","webpack://tsf/./src/views/PredictionView.vue","webpack://tsf/./src/views/PredictionView.vue?eb1d"],"sourcesContent":["<template>\r\n  <div>아버지와 아들의 키를 담은 엑셀파일을 넣어주세요.</div>\r\n  <br />\r\n  <div>\r\n    <input type=\"file\" @change=\"readExcel\" /><button\r\n      id=\"modeling-button\"\r\n      @click=\"modeling\"\r\n    >\r\n      분석시작\r\n    </button>\r\n  </div>\r\n  <br />\r\n  <div>\r\n    <input type=\"text\" id=\"input_data\" /><button @click=\"prediction\">\r\n      예측\r\n    </button>\r\n  </div>\r\n  <div id=\"predict_section\"></div>\r\n</template>\r\n\r\n<script>\r\n// import { response } from \"express\";\r\n\r\n/* eslint-disable */\r\nexport default {\r\n  name: \"app\",\r\n  data() {\r\n    return {\r\n      father_height: [],\r\n      son_height: [],\r\n    };\r\n  },\r\n  methods: {\r\n    async readExcel(event) {\r\n      console.log(event);\r\n      let input = event.target; // target?\r\n      let reader = new FileReader(); // FileReader??\r\n      let father_height_dum = [];\r\n      let son_height_dum = [];\r\n      reader.onload = function (_) {\r\n        // onload?\r\n        let data = reader.result;\r\n        let wordBook = XLSX.read(data, { type: \"binary\" }); // ???\r\n        const x = wordBook.Sheets.train; // 엑셀의 sheet를 정한다\r\n        for (let j = 2; j < 757; j++) {\r\n          father_height_dum.push(x[\"A\" + j].v);\r\n          son_height_dum.push(x[\"B\" + j].v);\r\n        }\r\n      };\r\n      reader.readAsBinaryString(input.files[0]);\r\n      this.father_height = father_height_dum;\r\n      this.son_height = son_height_dum;\r\n      // ???\r\n    },\r\n    modeling(_) {\r\n      console.log(this.father_height);\r\n      let xt = tf.tensor(this.father_height); // 이게 의미하는 게 뭘까.. 굳이 tf.tensor로 만드는 이유는?\r\n      let yt = tf.tensor(this.son_height);\r\n\r\n      // 모델의 모양을 만들기\r\n      let X = tf.input({ shape: [1] }); // 값 하나 들어옴\r\n      let Y1 = tf.layers.dense({ units: 10, activation: \"relu\" }).apply(X); // apply를 통해 연결\r\n      let Y2 = tf.layers.dense({ units: 10, activation: \"relu\" }).apply(Y1);\r\n      let Z = tf.layers.dense({ units: 1 }).apply(Y2);\r\n      let model = tf.model({ inputs: X, outputs: Z }); // 인아웃풋 저장\r\n      tfvis.show.modelSummary({ name: \"Model Summary\" }, model);\r\n      let compileParam = {\r\n        optimizer: tf.train.adam(), // train ??\r\n        loss: tf.losses.meanSquaredError,\r\n      }; // 최적화의 loss 측정방법종류\r\n      model.compile(compileParam); // 컴파일\r\n      const fitParm = {\r\n        epochs: 100,\r\n        // callbacks: {\r\n        //   onEpochEnd: function (epoch, logs) {\r\n        //     console.log(\"epoch\", epoch, logs, \"RMSE=>\", Math.sqrt(logs.loss));\r\n        //     // RMSE는 뭐임? sprt는 뭐임?\r\n        //   },\r\n        // },\r\n        callbacks: tfvis.show.fitCallbacks(\r\n          { name: \"Training Performance\" },\r\n          [\"loss\", \"mse\"],\r\n          { height: 200, callbacks: [\"onEpochEnd\"] }\r\n        ),\r\n      };\r\n      // const my = tf.tensor([32]);\r\n      model.fit(xt, yt, fitParm).then(() => {\r\n        console.log(model);\r\n        // model.fit(xt, yt, fitParm) => 데이터와 모델을 통해 모델링을 한다. => 그리고 거기서 나온 식으로\r\n        let result = model.predict(xt);\r\n        // model.predict(my) => 특정 값의 예상값을 뽑아낼 수 있다.\r\n        result.print();\r\n        // model.save(\"downloads://my-model\"); // 모델을 저장\r\n        model.save(\"localstorage://my-model-3\");\r\n        console.log(\"모델 저장됨\");\r\n      });\r\n    },\r\n    async prediction() {\r\n      const inputData = document.getElementById(\"input_data\");\r\n      const xt = tf.tensor(Number(inputData.value));\r\n      const model = await tf.loadLayersModel(\"localstorage://my-model-3\");\r\n      console.log(\"모델 로드됨\");\r\n      console.log(model);\r\n      let newResult = model.predict(xt);\r\n      newResult.print();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n","import { render } from \"./ModelingView.vue?vue&type=template&id=67756bac\"\nimport script from \"./ModelingView.vue?vue&type=script&lang=js\"\nexport * from \"./ModelingView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"D:\\\\YDW\\\\project\\\\TsFPj\\\\tsf\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!-- https://velog.io/@hgoguma_124/Vue.js-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%97%86%EC%9D%B4-Drag-Drop-%EA%B0%80%EB%8A%A5%ED%95%9C-%ED%8C%8C%EC%9D%BC-%EC%97%85%EB%A1%9C%EB%93%9C-%EB%A7%8C%EB%93%A4%EA%B8%B0 -->\n<template>\n  <form action=\"\">\n    <div class=\"container\">\n      <div\n        class=\"file-upload-container\"\n        @dragenter=\"onDragenter\"\n        @dragover=\"onDragover\"\n        @dragleave=\"onDragleave\"\n        @drop=\"onDrop\"\n        @click=\"onClick\"\n      >\n        <div class=\"file-upload\" :class=\"isDragged ? 'dragged' : ''\">\n          사진이나 이미지 파일을 드래그 & 드랍\n        </div>\n      </div>\n      <!-- 파일 업로드 -->\n      <input\n        type=\"file\"\n        ref=\"fileInput\"\n        class=\"file-upload-input\"\n        @change=\"onFileChange\"\n        multiple\n      />\n      <!-- 업로드된 리스트 -->\n      <div class=\"file-upload-list\">\n        <div\n          class=\"file-upload-list__item\"\n          v-for=\"(file, index) in fileList\"\n          :key=\"index\"\n        >\n          <div class=\"file-upload-list__item__data\">\n            <img\n              class=\"file-upload-list__item__data-thumbnail\"\n              v-bind:id=\"file.name\"\n              :src=\"file.src\"\n            />\n            <div\n              class=\"file-upload-list__item__data-name\"\n              v-bind:id=\"0 + file.name\"\n            >\n              <!-- {{ file.name }} -->\n            </div>\n          </div>\n          <div\n            class=\"file-upload-list__item__btn-remove\"\n            @click=\"mobileNet(file.name)\"\n          >\n            분석\n          </div>\n          <div\n            class=\"file-upload-list__item__btn-remove\"\n            @click=\"handleRemove(index)\"\n          >\n            삭제\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>\n</template>\n\n<script>\n/* eslint-disable */\nimport axios from \"axios\";\nexport default {\n  name: \"app\",\n  created() {\n    this.$socket.on(\"translate\", (msg) => {\n      const massages = msg.split(\"/\");\n      const prediction = document.getElementById(0 + massages[0]);\n      prediction.innerHTML = massages[1];\n      // console.log(massages);\n      // const img = document.getElementById(massages[0]);\n      // console.log(img.src);\n    });\n  },\n  data() {\n    return {\n      fileList: [],\n      PredictionsList: [],\n    };\n  },\n  methods: {\n    onClick() {\n      this.$refs.fileInput.click();\n    },\n    onDragenter() {\n      // class 넣기\n      this.isDragged = true;\n    },\n    onDragleave() {\n      // class 삭제\n      this.isDragged = false;\n    },\n    onDragover(event) {\n      // 드롭을 허용하도록 prevetDefault() 호출\n      event.preventDefault();\n    },\n    onDrop(event) {\n      // 기본 액션을 막음 (링크 열기같은 것들)\n      event.preventDefault();\n      this.isDragged = false;\n      const files = event.dataTransfer.files;\n      this.addFiles(files);\n    },\n    onFileChange(event) {\n      const files = event.target.files;\n      this.addFiles(files);\n    },\n    async addFiles(files) {\n      for (let i = 0; i < files.length; i++) {\n        const src = await this.readFiles(files[i]);\n        files[i].src = src;\n        console.log(files[i]);\n        this.fileList.push(files[i]);\n        this.$socket.emit(\"src\", files[i].src);\n        // axios({\n        //   url: \"http://127.0.0.1:3000/\",\n        //   method: \"POST\",\n        //   data: {\n        //     imageUrl: files[i].src,\n        //   },\n        // }).then((res) => {\n        //   alert(res.data.message);\n        // });\n      }\n    },\n    // FileReader를 통해 파일을 읽어 thumbnail 영역의 src 값으로 셋팅\n    async readFiles(files) {\n      return new Promise((resolve) => {\n        const reader = new FileReader();\n        reader.onload = async (e) => {\n          resolve(e.target.result);\n        };\n        reader.readAsDataURL(files);\n      });\n    },\n    handleRemove(index) {\n      this.fileList.splice(index, 1);\n      // if (this.fileList.length > 0) {\n      //   console.log(this.fileList);\n      //   for (let i = 0; i < this.fileList.length; i++) {\n      //     const prediction = document.getElementById(0 + this.fileList[i].name);\n      //     prediction.innerHTML = \"분석중\";\n      //     this.mobileNet(this.fileList[i].name);\n      //   }\n      // }\n    },\n    mobileNet(file) {\n      const image = document.getElementById(file);\n      const prediction = document.getElementById(0 + file);\n      mobilenet.load().then((model) => {\n        model.classify(image).then((predictions) => {\n          this.$socket.emit(\n            \"translate\",\n            file +\n              \"/\" +\n              predictions[0].className +\n              \":\" +\n              (predictions[0].probability * 100).toFixed(2) +\n              \"%<br>\" +\n              predictions[1].className +\n              \":\" +\n              (predictions[1].probability * 100).toFixed(2) +\n              \"%<br>\" +\n              predictions[2].className +\n              \":\" +\n              (predictions[2].probability * 100).toFixed(2) +\n              \"%\"\n          );\n        });\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.container {\n  min-height: 300px;\n  width: 500px;\n  margin: 0 auto;\n}\n.file-upload {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  border: transparent;\n  border-radius: 20px;\n  cursor: pointer;\n  &.dragged {\n    border: 1px dashed powderblue;\n    opacity: 0.6;\n  }\n  &-container {\n    height: 300px;\n    padding: 20px;\n    margin: 0 auto;\n    box-shadow: 0 0.625rem 1.25rem #0000001a;\n    border-radius: 20px;\n  }\n  &-input {\n    display: none;\n  }\n  &-list {\n    margin-top: 10px;\n    width: 100%;\n    &__item {\n      padding: 10px;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      &__data {\n        display: flex;\n        align-items: center;\n        &-thumbnail {\n          margin-right: 10px;\n          border-radius: 20px;\n          width: 120px;\n          height: 120px;\n        }\n      }\n      &__btn-remove {\n        cursor: pointer;\n        border: 1px solid powderblue;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        padding: 5px;\n        border-radius: 6px;\n      }\n    }\n  }\n}\n</style>\n","import { render } from \"./PredictionView.vue?vue&type=template&id=1b91aa3f\"\nimport script from \"./PredictionView.vue?vue&type=script&lang=js\"\nexport * from \"./PredictionView.vue?vue&type=script&lang=js\"\n\nimport \"./PredictionView.vue?vue&type=style&index=0&id=1b91aa3f&lang=scss\"\n\nimport exportComponent from \"D:\\\\YDW\\\\project\\\\TsFPj\\\\tsf\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createElementVNode","type","id","_hoisted_1","_hoisted_2","onChange","$options","onClick","_hoisted_3","_hoisted_4","_hoisted_5","name","data","father_height","son_height","methods","async","event","console","log","input","target","reader","FileReader","father_height_dum","son_height_dum","onload","_","result","wordBook","XLSX","read","x","Sheets","train","j","push","v","readAsBinaryString","files","this","modeling","xt","tf","tensor","yt","X","shape","Y1","layers","dense","units","activation","apply","Y2","Z","model","inputs","outputs","tfvis","show","modelSummary","compileParam","optimizer","adam","loss","losses","meanSquaredError","compile","fitParm","epochs","callbacks","fitCallbacks","height","fit","then","predict","print","save","inputData","document","getElementById","Number","value","loadLayersModel","newResult","__exports__","render","action","class","_createElementBlock","onDragenter","onDragover","onDragleave","onDrop","_ctx","ref","multiple","_Fragment","$data","file","index","key","src","created","$socket","on","msg","massages","split","prediction","innerHTML","fileList","PredictionsList","$refs","fileInput","click","isDragged","preventDefault","dataTransfer","addFiles","onFileChange","i","length","readFiles","emit","Promise","resolve","e","readAsDataURL","handleRemove","splice","mobileNet","image","mobilenet","load","classify","predictions","className","probability","toFixed"],"sourceRoot":""}